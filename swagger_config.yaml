swagger: "2.0"
info:
  title: "Facemodel API"
  description: "API documentation for the Facemodel application"
  version: "1.0.0"
schemes:
  - "http"
basePath: "/api/v1" # Assuming your routes are under this base path
consumes:
  - "multipart/form-data" # Assuming image uploads are done via multipart/form-data
  - "application/json"
produces:
  - "application/json"

paths:
  /identify_image:
    post:
      tags:
        - Image Identification
      summary: "Identify Image"
      description: "Identifies users based on uploaded images."
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: "image"
          in: "formData"
          description: "Image file to be identified"
          required: true
          type: "file"
      responses:
        200:
          description: "User identified successfully."
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Incomplete data or no file uploaded."

  /image:
    post:
      tags:
        - Image Upload/User Enrollment
      summary: "Take Raw Image"
      description: "Takes raw images and creates new users."
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: "email"
          in: "formData"
          description: "Email of the user"
          required: true
          type: "string"
        - name: "first_name"
          in: "formData"
          description: "First name of the user"
          required: true
          type: "string"
        - name: "last_name"
          in: "formData"
          description: "Last name of the user"
          required: true
          type: "string"
        - name: "image"
          in: "formData"
          description: "Image file to be stored"
          required: true
          type: "file"
      responses:
        200:
          description: "User created and image processed successfully."
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Incomplete data or no file uploaded."
  /image/users:
    get:
      tags:
        - Users
      summary: "Get All Users"
      description: "Retrieve all users."
      produces:
        - "application/json"
      responses:
        200:
          description: "List of all users."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        404:
          description: "No users found."

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      email:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
      image_id:
        type: "string"
